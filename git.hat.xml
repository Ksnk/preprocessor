<?xml version="1.0" encoding="UTF-8"?>
<config >

    <!--
        filling a `hat` ponit with info from GIT  or SVN. whatever your using

        git variable points to real GIT command you need to run at your computer.
        svn variable points to real SVN command you need to run at your computer.
    -->
    <var name="git" default="git"/>
    <var name="svn" default="svn"/>

    <files>
        <echo><![CDATA[<%
        $separator= str_repeat('-',90);
        if(is_dir('.svn')){
        // so it's svn project
            $output=array();
            $info = exec($svn." info", $output); $output =implode("\n",$output);
            preg_match('/URL:\s(.*)$/im',$output,$m);
            $svn_url=$m[1];
            preg_match('/Revision:\s(.*)$/im',$output,$m);
            $svn_revision=$m[1];
            preg_match('/Date:\s([\d- :\+]+)$/im',$output,$m);
            $svn_modified=trim($m[1]);
            $buildtime=date('ymdHi');
            POINT::inline('hat',
$separator.'
$Id: '.$version.'
 Rev: '.$svn_revision.', Modified: '.$svn_modified.'
 SVN: '.$svn_url.'$
'.$separator.'
'.$license.'
'.$separator) ;
        }  else if(is_dir('.git')) {

            // get the last tag from output
            $output=array();
            $tag = exec($git." describe --tags", $output);
            // get a last string from output
            $output=array();
            $git_url = exec($git." remote -v", $output);
            // get all output & filter him
            $output=array();    exec($git." status -uno -s", $output); $output =implode("\n",$output);
            $status='';
            if(""!=(trim($modified=preg_replace("#\n+#","\n",preg_replace('#^.*?build/.*?$#m','',$output))))){
                // show modified files int log to help control versioning
                preprocessor::log(2,'"'.$modified."\"\n");
                // iÐ° some src files changed but not comited - builded version marked as draft
                // so it's impossible to restore a same version later if you need it.
                if(preg_match('#src/\w#',$output))
                    $status="status : draft build.\n";
            };
            $buildtime=date('ymdHi'); POINT::inline('hat',
$separator.'
$Id: '.$version.',
ver: '.$tag.', Last build: '.$buildtime.'
'.$status.'GIT: '.$git_url.'$
'.$separator.'
'.$license.'
'.$separator) ;
        } else { // WFT? Setup some version control quickly and start using. What are you waiting for?
            $buildtime=date('ymdHi');
            POINT::inline('hat',
$separator.'
$Id: '.$version.',
Last build: '.$buildtime.'
'.$separator.'
'.$license.'
'.$separator) ;
        }
%>]]>
        </echo>
    </files>
</config>